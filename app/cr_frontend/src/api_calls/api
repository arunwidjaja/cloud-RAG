export async function fetch_db_files_metadata() {
  // TODO: Make it collection specific
  try {
      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/db_files_metadata`);
      if (!response.ok) {
          throw new Error('Network response was not ok');
      }
      const files = await response.json();
      return files;
  } catch (error) {
      console.error('Error fetching files:', error);
      return [];
  }
}
export async function fetch_uploads_metadata() {
  try {
      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/uploads_metadata`);
      if (!response.ok) {
          throw new Error('Network response was not ok');
      }
      const files = await response.json();
      return files;
  } catch (error) {
      console.error('Error fetching uploads:', error);
      return [];
  }
}
export async function start_push_to_DB() {
  try {
      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/initiate_push_to_db`);
      if (!response.ok) {
          throw new Error('Network response was not ok');
      }
      else {
          const pushed_files = await response.json();
          return pushed_files
      }
  } catch (error) {
      console.error('Error refreshing database:', error);
      return [];
  }
}
export async function start_upload_deletion(upload_deletion_list){
  try{
    const hashes = upload_deletion_list.map(item => item.hash);
    const query = hashes.map(hash => `hashes=${encodeURIComponent(hash)}`).join('&');
    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/delete_uploads?${query}`,{
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    const deleted_uploads = await response.json();
    return deleted_uploads
  } catch (error) {
    console.error('An error occurred while deleting uploads: ', error)
  }
}
export async function start_file_deletion(file_deletion_list){
  try {
    const hashes = file_deletion_list.map(item => item.hash);
    const query = hashes.map(hash => `hashes=${encodeURIComponent(hash)}`).join('&');
    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/delete_files?${query}`,{
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    const deleted_files = await response.json();
    return deleted_files 
  } catch (error) {
    console.error('An error while deleting files from the collection: ', error)
  }
}
export async function start_file_download(file_download_list){
  try {
    const hashes = file_download_list.map(item => item.hash);
    const query = hashes.map(hash => `hashes=${encodeURIComponent(hash)}`).join('&');
    const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/download_files?${query}`,{
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
    });
    const downloaded_files = await response.json();
    return downloaded_files
  } catch (error) {
    console.error('An error occurred while download files: ', error)
  }
}